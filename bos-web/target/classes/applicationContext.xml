<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://www.springframework.org/schema/beans" 
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" 
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:jaxws="http://cxf.apache.org/jaxws"
	xmlns:soap="http://cxf.apache.org/bindings/soap"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
						http://www.springframework.org/schema/beans/spring-beans-4.2.xsd 
						http://www.springframework.org/schema/context 
						http://www.springframework.org/schema/context/spring-context-4.2.xsd 
						http://www.springframework.org/schema/aop 
						http://www.springframework.org/schema/aop/spring-aop-4.2.xsd 
						http://www.springframework.org/schema/tx 
						http://www.springframework.org/schema/tx/spring-tx-4.2.xsd 
						http://cxf.apache.org/bindings/soap 
						http://cxf.apache.org/schemas/configuration/soap.xsd
						http://cxf.apache.org/jaxws 
						http://cxf.apache.org/schemas/jaxws.xsd">
						

	<!-- 加载属性文件 -->
	<context:property-placeholder location="classpath:db.properties"/>
	<!-- 配置数据源 -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="driverClass" value="${jdbc.driverClass}"></property>
		<property name="jdbcUrl" value="${jdbc.jdbcUrl}"></property>
		<property name="user" value="${jdbc.user}"></property>
		<property name="password" value="${jdbc.password}"></property>
	</bean>
	<!-- 配置LocalSessionFactoryBean spring提供用于整合hibernate的工厂bean -->
	<bean id="sessionFactory" class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource"></property>
		<property name="hibernateProperties" >
			<props>
				<prop key="hibernate.dialect" >org.hibernate.dialect.MySQLDialect</prop>
				<prop key="hibernate.show_sql" >true</prop>
				<prop key="hibernate.format_sql" >true</prop>
				<prop key="hibernate.hbm2ddl.auto" >update</prop>
			</props>
		</property>
		<!-- 注入hibernate映射文件 -->
		<property name="mappingLocations">
			<list>
				<value>classpath:per/bos/domain/*.xml</value>
			</list>
		</property>
	</bean>

	<!-- 事务管理 -->
	<bean id="transactionManager" class="org.springframework.orm.hibernate5.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" ></property>
	</bean>
	
	<!-- 组件扫描 -->
	<context:component-scan base-package="per.bos"/>
	<!-- 支持spring注解 -->
	<context:annotation-config/>
	<tx:annotation-driven/>
	
	<!-- 注册crm客户端代理对象 -->
	<jaxws:client id="myClient" serviceClass="per.crm.service.ICustomerService" address="http://localhost:8080/crm/service/cxfservice?wsdl">
	</jaxws:client>
	
	<!-- 配置shiro框架的过滤器工厂对象 -->
	<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
		<!-- 注入安全管理器对象 -->
		<property name="securityManager" ref="securityManager"></property>
		<!-- 注入相关页面访问Url -->
		<property name="loginUrl" value="/login.jsp"></property>
		<property name="successUrl" value="/index.jsp"></property>
		<property name="unauthorizedUrl" value="/unauthorize.jsp"></property>
		<!-- 注入URL拦截规则 -->
		<property name="filterChainDefinitions">
			<value>
				/css/** = anon
				/js/** =anon
				/images/** = anon
				/login.jsp = anon
				/validatecode.jsp = anon
				/userAction_login = anon
				/page_base_staff.action = perms["staff-list"]
				/* = authc
			</value>
		</property>
	</bean>
	<!-- 安全管理器 -->
	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
		<property name="realm" ref="bosRealm"></property>
	</bean>
	
	<!-- 注册realm -->
	<bean id="bosRealm" class="per.bos.service.Realm.BOSRealm"></bean>
	
	<!-- 开启shiro注解 -->
	<bean id="defaultAdvisorAutoProxyCreator" class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator">
		<!-- 使用cglib代理 -->
		<property name="proxyTargetClass" value="true"></property>
	</bean>
	
	<!-- 配置shiro框架提供的切面类，用于创建代理对象 -->
	<bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor"></bean>
</beans>